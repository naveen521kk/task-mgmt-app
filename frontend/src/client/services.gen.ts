// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { LoginForAccessTokenTokenPostData, LoginForAccessTokenTokenPostResponse, ReadUsersMeUsersMeGetResponse, ReadOwnItemsUsersMeItemsGetResponse, CreateTaskForUserUsersMeTasksPostData, CreateTaskForUserUsersMeTasksPostResponse, CreateUserUsersPostData, CreateUserUsersPostResponse, CreateTaskForUserUsersUserIdTasksPostData, CreateTaskForUserUsersUserIdTasksPostResponse } from './types.gen';

/**
 * Login For Access Token
 * @param data The data for the request.
 * @param data.formData
 * @returns Token Successful Response
 * @throws ApiError
 */
export const loginForAccessTokenTokenPost = (data: LoginForAccessTokenTokenPostData): CancelablePromise<LoginForAccessTokenTokenPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/token',
    formData: data.formData,
    mediaType: 'application/x-www-form-urlencoded',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Read Users Me
 * @returns User Successful Response
 * @throws ApiError
 */
export const readUsersMeUsersMeGet = (): CancelablePromise<ReadUsersMeUsersMeGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/me/'
}); };

/**
 * Read Own Items
 * @returns Task Successful Response
 * @throws ApiError
 */
export const readOwnItemsUsersMeItemsGet = (): CancelablePromise<ReadOwnItemsUsersMeItemsGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/me/items/'
}); };

/**
 * Create Task For User
 * @param data The data for the request.
 * @param data.requestBody
 * @returns Task Successful Response
 * @throws ApiError
 */
export const createTaskForUserUsersMeTasksPost = (data: CreateTaskForUserUsersMeTasksPostData): CancelablePromise<CreateTaskForUserUsersMeTasksPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/users/me/tasks/',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Create User
 * @param data The data for the request.
 * @param data.requestBody
 * @returns User Successful Response
 * @throws ApiError
 */
export const createUserUsersPost = (data: CreateUserUsersPostData): CancelablePromise<CreateUserUsersPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/users/',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Create Task For User
 * @param data The data for the request.
 * @param data.userId
 * @param data.requestBody
 * @returns Task Successful Response
 * @throws ApiError
 */
export const createTaskForUserUsersUserIdTasksPost = (data: CreateTaskForUserUsersUserIdTasksPostData): CancelablePromise<CreateTaskForUserUsersUserIdTasksPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/users/{user_id}/tasks/',
    path: {
        user_id: data.userId
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };